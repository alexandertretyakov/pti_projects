<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>JSX and Components</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone@7.15.7/babel.min.js"></script>
</head>

<body>
    <style>
        body {
            padding-bottom: 200px;
        }

        .z {
            color: red;
            margin: 1em 0;
        }
    </style>

    <div class="games"><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span></div><img src="images/Batman-v-Superman-Dawn-of-Justice-290x180.jpg"><h6>Batman v Superman Dawn of Justice</h6></div><div class="game"><div class="game-flags">   </div><img src="images/Batman-Begins-290x180.jpg"><h6>Batman Begins</h6></div><div class="game"><div class="game-flags"><span class="item item-new">New</span></div><img src="images/jackpot-giant-290x180.jpg"><h6>Jackpot Giant</h6></div><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span><span class="item item-new">New</span></div><img src="images/european-roulette-290x180.jpg"><h6>Premium European Roulette</h6></div><div class="game"><div class="game-flags">   </div><img src="images/Da-vinci-Vault-290x180.jpg"><h6>Da Vinci’s Vault</h6></div><div class="game"><div class="game-flags">   </div><img src="images/Murder-Mystery-290x180.jpg"><h6>Murder Mystery</h6></div><div class="game"><div class="game-flags"><span class="item item-new">New</span></div><img src="images/PremiumBlackjack-290x180.jpg"><h6>Premium Blackjack</h6></div><div class="game"><div class="game-flags"><span class="item item-hot">Hot</span></div><img src="images/Gladiator-road-to-rome-290x180.jpg"><h6>Gladiator 2</h6></div></div>

    <p class="z">Используй JSX и Функциональные компоненты, чтобы добавить игры в контейнер #games</p>

    <div class="games" id="games"></div>

    <script>
        var games = [
            {
                name: 'Batman v Superman Dawn of Justice',
                imageURL: 'images/Batman-v-Superman-Dawn-of-Justice-290x180.jpg',
                flagHot: true,
                flagExclusive: true
            },
            {
                name: 'Batman Begins',
                imageURL: 'images/Batman-Begins-290x180.jpg'
            },
            {
                name: 'Jackpot Giant',
                imageURL: 'images/jackpot-giant-290x180.jpg',
                flagNew: true
            },
            {
                name: 'Premium European Roulette',
                imageURL: 'images/european-roulette-290x180.jpg',
                flagHot: true,
                flagNew: true
            },
            {
                name: 'Da Vinci’s Vault',
                imageURL: 'images/Da-vinci-Vault-290x180.jpg',
                flagExclusive: true
            },
            {
                name: 'Murder Mystery',
                imageURL: 'images/Murder-Mystery-290x180.jpg'
            },
            {
                name: 'Premium Blackjack',
                imageURL: 'images/PremiumBlackjack-290x180.jpg',
                flagNew: true
            },
            {
                name: 'Gladiator 2',
                imageURL: 'images/Gladiator-road-to-rome-290x180.jpg',
                flagHot: true
            }
        ];
    </script>

    <script type="text/babel">
        class Game extends React.Component {
            render () {
                return (
                    <div className="game">
                        <div className="game-flags">
                            {this.props.flagNew ? <span className="item item-new">New</span> : null}
                            {this.props.flagHot ? <span className="item item-hot">Hot</span> : null}
                            {this.props.flagExclusive ? <span className="item item-exclusive">Exclusive</span> : null}
                        </div>
                        <img src={this.props.imageURL} />
                        <h6>{this.props.name}</h6>
                    </div>
                )
            }
        }

        var gamesOut = <div>
            {
               games.map(function (game, idx) {
                   return <Game {...game} key={idx} />
               })
            }
        </div>

        ReactDOM.render(gamesOut, document.querySelector('#games'));
    </script>

    <style>
        .games {
            background: #212324;
            padding: 0.5%;
            border-radius: 3px;
            margin-bottom: 0.5%;
        }

        .games:empty {
            display: block;
        }

        .games::after {
            content: "";
            clear: both;
            display: block;
        }

        .game {
            background: #353638;
            padding: 12px;
            border-radius: 3px;
            border: 1px solid transparent;
            float: left;
            width: 24%;
            box-sizing: border-box;
            margin: 0.5%;
            cursor: pointer;
            position: relative;
        }

        .game-flags {
            position: absolute;
            top: 18px;
            left: 18px;
        }

        .game-flags .item {
            background: magenta;
            color: #fff;
            margin-right: 2px;
            padding: 4px;
            border-radius: 2px;
            font-size: 9px;
            text-transform: uppercase;
            font-family: sans-serif;
        }

        .game-flags .item-new {
            background: #14b1a4;
        }

        .game-flags .item-hot {
            background: #d5341a;
        }

        .game:hover {
            border: 1px solid white;
        }

        .game img {
            display: block;
            border-radius: 3px;
            box-shadow: 0 0 2px #a4a4a4;
            width: 100%;
            margin-bottom: 12px;
        }

        .game h6 {
            color: #b1b1b1;
            font-family: Helvetica, sans-serif;
            font-size: 15px;
            font-weight: normal;
            margin: 0;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }

        .game:hover h6 {
            color: #ffcb05;
        }
    </style>

    <p class="z">Используй JSX и Функциональные компоненты, чтобы добавить девочек в контейнер #whores</p>

    <div class="whores" id="whores"></div>

    <script>
        var whores = [
            {
                name: 'Сильвия',
                photo: 'images/silvia.jpg',
                age: '18',
                hair: 'блондинка',
                boobs: '4',
                weight: '50',
                height: '168',
                phone: '+380960000001',
                can_come: true,
                teaser: 'Очень нежная девчонка доставит Вам удовольствие по полной программе! Каждый мужчина ищет идеальную женщину - попробуй, может быть я именно та которая тебе нужна... Фото мои 1000%!!! Выезда НЕТ!!! Квартира для встреч ЕСТЬ, 5 мин от ст. метро \"Дворец Украина\"'
            },
            {
                name: 'Белла',
                photo: 'images/bella.jpg',
                age: '21',
                hair: 'брюнетка',
                boobs: '3',
                weight: '65',
                height: '172',
                phone: '+380960000002',
                can_come: false,
                teaser: 'Я - барышня абсолютно особенная! Я яркая и стильная, веселая и заводная, сексуальная и конечно же очень красивая! Для тех, кто способен оценить по достоинству настоящую женщину, для тех, кто любит в постели задор и изобретательность, для тех прекрасных и щедрых мужчин, которые хотят провести незабываемый досуг в объятиях умелой красотки! Я вся для вас, дорогие мои. Да, да! Именно для тебя, милый! ФОТО МОИ!!!'
            },
            {
                name: 'Марта',
                photo: 'images/marta.jpg',
                age: '23',
                hair: 'брюнетка',
                boobs: '2',
                weight: '54',
                height: '163',
                phone: '+380960000003',
                can_come: false,
                teaser: 'Я - симпатичная девочка экзотической внешности без комплексов и с огромной любовью к сексу! Я непревзойденная любовница, страстная, доступная и яркая! Я невероятно сексуальна и изобретательна, мила и непосредственна. Не теряй времени, звони мне, мой друг! Я скрашу твоё одиночество :)'
            },
            {
                name: 'Жасмин',
                photo: 'images/zhasmin.jpg',
                age: '32',
                hair: 'блондинка',
                boobs: '1',
                weight: '45',
                height: '151',
                phone: '+380960000004',
                can_come: true,
                teaser: 'Еще не распустившаяся розочка ждет своего воздыхателя! Чарующий аромат, тонкий силуэт. Раскрой мой бутончик и покажи свою силу! Я храню свою свежесть, чтоб ты мог вкусить первым тот первозданный нектар, что приготовлен для тебя! Мои упругие девичьи грудки покрываются росой вожделения, когда я думаю о сексе с тобой, мое лоно наполняется жаркой страстью и желаниями.'
            }
        ];
    </script>

    <script type="text/babel">
        class Girl extends React.Component {
            render () {
                return (
                    <div className="whore">
                        <div className="whore-name">{this.props.name}</div>
                        <img src={this.props.photo} width="200" />
                        <div className="whore-age">Возраст: {this.props.age}</div>
                        <div className="whore-hair">Цвет волос: {this.props.hair}</div>
                        <div className="whore-boobs">Размер груди: {this.props.boobs}</div>
                        <div className="whore-height">Рост: {this.props.height}</div>
                        <div className="whore-weight">Вес: {this.props.weight}</div>
                        <div className="whore-phone">{this.props.phone}</div>
                        <div className="whore-can-come">Выезд: {this.props.can_come ? '+' : '-'}</div>
                        <div className="whore-teaser">{this.props.teaser}</div>
                    </div>
                )
            }
        }

        var girls = <div>
            {
                whores.map(function (whore, idx) {
                    return <Girl {...whore} key={idx} />
                })
            }
        </div>

        ReactDOM.render(girls, document.querySelector('#whores'));
    </script>

    <style>
        .whores {
            background: #751a1a;
            width: 910px;
            min-height:  474px;
            padding: 10px;
            overflow: hidden;
            margin-bottom: 1em;
        }

        .whore {
            background: white;
            padding: 10px;
            width: 200px;
            position: relative;
            font-family: Arial, sans-serif;
            font-size: 15px;
            cursor: pointer;
            float: left;
            margin: 0 0 10px 10px;
        }

        .whore:first-child {
            margin-left: 0;
        }

        .whore-name {
            font-size: 22px;
            font-family: Tahoma, sans-serif;
            margin-bottom: 5px;
            color: #7b1e1e;
        }

        .whore img {
            margin-bottom: 10px;
        }

        .whore-teaser {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            box-sizing: border-box;
            padding: 10px;
            display: none;
        }

        .whore:hover .whore-teaser {
            display: block;
        }

        .whore-phone {
            font-size: 18px;
            font-weight: bold;
            margin: 5px 0 1px;
        }
    </style>

</body>
</html>