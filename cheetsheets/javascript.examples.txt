const isEven = (n) => n % 2 === 0;

const inc = (n) => n + 1;

const add = (a, b) => a + b;

const students = [
    {name: 'Kyle', age: 22},
    {name: 'Oliver', age: 20},
    {name: 'Joe', age: 23},
    {name: 'Jack', age: 20}
];

const dot = { x: 2, y: 4 };

const circle = { x: 8, y: 9, r: 10 };

const man = {
    name: 'John',
    age: 35,
    hair: 'brown',
    coords: { x: 10, y: 0 }
};

const bear = {
    hair: 'brown',
    coords: { x: 12 }
};

const pig = {
    name: 'Peppa',
    age: 12,
    hair: 'pink',
    coords: { x: 14, y: 0 }
};

// ============================== String

'JavaScript'.charAt(4)
// 'S'

'Je'.concat('sus')
// 'Jesus'
'Острая'.concat(' ', 'сабля')
// 'Острая сабля'

'Острая сабля'.endsWith('бля')
// true
'Я люблю Киев'.endsWith('Киев')
// true
'Я люблю Киев'.endsWith('люблю')
// false
'Я люблю Киев'.endsWith('люблю', 7)
// true

'Я люблю Киев'.includes('Киев')
// true
'Я люблю Киев'.includes('Киев', 8)
// true
'Я люблю Киев'.includes('Киев', 9)
// false

'Я люблю Киев'.indexOf('Киев')
// 8
'Я люблю Киев'.indexOf('ю')
// 3
'Я люблю Киев'.indexOf('ю', 4)
// 6
'Я люблю Киев'.indexOf('ж')
// -1

'Я люблю Киев'.lastIndexOf('люблю')
// 2
'Я люблю Киев'.lastIndexOf('ю')
// 6
'Я люблю Киев'.lastIndexOf('ю', 5)
// 3
'Я люблю Киев'.lastIndexOf('ж')
// -1

'Я люблю Киев'.match(/ж/)
// null
'Я люблю Киев'.match(/Киев/)
// ['Киев', index: 8, input: 'Я люблю Киев', groups: undefined]
'Я люблю Киев'.match(/Киев/g)
// ['Киев']
'bananas'.match(/[a-z]a/g)
// ['ba', 'na', 'na']

'Apple'.padEnd(9, '.')
// 'Apple....'
'Apple'.padEnd(3, '.')
// 'Apple'

'1'.padStart(5, '0')
// '00001'

'.'.repeat(4)
// '....'

'Я люблю Львов'.replace('Львов', 'Киев')
// 'Я люблю Киев'
'Шо то хуйня, шо это хуйня'.replace(/хуйня/, '@#%')
// 'Шо то @#%, шо это хуйня'
'Шо то хуйня, шо это хуйня'.replace(/хуйня/g, '@#%')
// 'Шо то @#%, шо это @#%'
'Шо то хуйня, шо это хуйня'.replace(/хуйня/g, '"$&"')
// 'Шо то "хуйня", шо это "хуйня"'
'borderTopColor'.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`)
// 'border-top-color'

'Я люблю Киев'.search(/Киев/)
// 8
'Я люблю Киев'.search(/Львов/)
// -1

'банкротство'.slice(3, 7)
// 'крот'
'банкротство'.slice(3, -4)
// 'крот'
'удочка'.slice(1)
// 'дочка'

'2/7/2024'.split('/')
// ['2', '7', '2024']
'2/7/2024'.split(/\//)
// ['2', '7', '2024']
'127.0.0.1'.split('.', 3)
// ['127', '0', '0']
'Jesus'.split('')
// ['J', 'e', 's', 'u', 's']

'столб'.startsWith('стол')
// true
'банкротство'.startsWith('крот')
// false
'банкротство'.startsWith('крот', 3)
// true

'банкротство'.substring(3, 7)
// 'крот'
'удочка'.substring(1)
// 'дочка'

'Kyiv'.toLowerCase()
// 'kyiv'

'Kyiv'.toUpperCase()
// 'KYIV'

' My name is '.trim()
// 'My name is'

// ============================== Array

[1, 1].concat(2, 3)
// [1, 1, 2, 3]
[1, 1].concat(2, 3, [4, [5]])
// [1, 1, 2, 3, 4, [5]]

[2, 4, 5].every(isEven)
// false
[2, 4, 6].every(isEven)
// true

[3, 4, 5, 6, 7, 8, 9].fill(1)
//=> [1, 1, 1, 1, 1, 1, 1]
// [1, 1, 1, 1, 1, 1, 1]
[3, 4, 5, 6, 7, 8, 9].fill(1, 2)
//=> [3, 4, 1, 1, 1, 1, 1]
// [3, 4, 1, 1, 1, 1, 1]
[3, 4, 5, 6, 7, 8, 9].fill(1, 2, -2)
//=> [3, 4, 1, 1, 1, 8, 9]
// [3, 4, 1, 1, 1, 8, 9]

[3, 5, 6, 4].filter(isEven)
// [6, 4]

[3, 5, 6, 4].find(isEven)
// 6

[3, 5, 6, 4].findIndex(isEven)
// 2

[1, 2, [3, 4, [5, 6]], 7].flat()
// [1, 2, 3, 4, [5, 6], 7]
[1, 2, [3, 4, [5, 6]], 7].flat(2)
// [1, 2, 3, 4, 5, 6, 7]

[5, 6, 7].forEach(console.log)
//=> undefined
// В консоли:
// 5 0 [5, 6, 7]
// 6 1 [5, 6, 7]
// 7 2 [5, 6, 7]

[2, 4, 6, 3].includes(7)
// false
[2, 4, 6, 3].includes(6)
// true
[2, 4, 6, 3].includes(6, 3)
// false
[2, 4, 6, 3].includes(6, -3)
// true

[2, 4, 6, 4].indexOf(7)
// -1
[2, 4, 6, 4].indexOf(4)
// 1
[2, 4, 6, 4].indexOf(4, 2)
// 3
[2, 4, 6, 4].indexOf(4, -2)
// 3

[8, 29, 2025].join('/')
// '8/29/2025'

[2, 4, 6, 4].lastIndexOf(7)
// -1
[2, 4, 6, 4].lastIndexOf(4)
// 3
[2, 4, 6, 4].lastIndexOf(4, 2)
// 1

[5, 6, 7].map(String)
// ['5', '6', '7']
[5, 6, 7].map(inc)
// [6, 7, 8]

[5, 6, 7].pop()
//=> 7
// [5, 6]

[3, 4, 5, 6].push(2)
//=> 5
// [3, 4, 5, 6, 2]
[3, 4, 5, 6].push(2, 3)
//=> 6
// [3, 4, 5, 6, 2, 3]
[3, 4, 5, 6].push([2, 3])
//=> 5
// [3, 4, 5, 6, [2, 3]]

[5, 6, 7].reduce(add)
// 18
[5, 6, 7].reduce(add, 10)
// 28

[2, 4, 6, 3].reverse()
//=> [3, 6, 4, 2]
// [3, 6, 4, 2]

[5, 6, 7].shift()
//=> 5
// [6, 7]

[3, 4, 5, 6, 7, 8].slice(2, 4)
// [5, 6]
[3, 4, 5, 6, 7, 8].slice(2, -1)
// [5, 6, 7]
[3, 4, 5, 6, 7, 8].slice(2)
// [5, 6, 7, 8]

[1, 3, 5].some(isEven)
// false
[1, 3, 6].some(isEven)
// true

[4, 2, 8, 6].sort((a, b) => a - b)
//=> [2, 4, 6, 8]
// [2, 4, 6, 8]
[4, 2, 8, 6].sort((a, b) => b - a)
//=> [8, 6, 4, 2]
// [8, 6, 4, 2]

[3, 4, 5, 6, 7, 8, 9].splice(3, 3)
//=> [6, 7, 8]
// [3, 4, 5, 9]
[3, 4, 5, 6, 7, 8, 9].splice(-4, 3)
//=> [6, 7, 8]
// [3, 4, 5, 9]
[3, 4, 5, 6, 7, 8, 9].splice(3, 3, 11, 22)
//=> [6, 7, 8]
// [3, 4, 5, 11, 22, 9]
[3, 4, 5, 6, 7, 8, 9].splice(3, 0, 11)
//=> []
// [3, 4, 5, 11, 6, 7, 8, 9]
[3, 4, 5, 6, 7, 8, 9].splice(-4)
//=> [6, 7, 8, 9]
// [3, 4, 5]

[5, 6, 7].unshift(11)
//=> 4
// [11, 5, 6, 7]
